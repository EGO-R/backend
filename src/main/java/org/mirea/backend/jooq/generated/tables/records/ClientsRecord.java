/*
 * This file is generated by jOOQ.
 */
package org.mirea.backend.jooq.generated.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.mirea.backend.jooq.generated.tables.Clients;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ClientsRecord extends UpdatableRecordImpl<ClientsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.clients.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.clients.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.clients.email</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.clients.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.clients.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.clients.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.clients.role</code>.
     */
    public void setRole(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.clients.role</code>.
     */
    public Short getRole() {
        return (Short) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientsRecord
     */
    public ClientsRecord() {
        super(Clients.CLIENTS);
    }

    /**
     * Create a detached, initialised ClientsRecord
     */
    public ClientsRecord(Long id, String email, String name, Short role) {
        super(Clients.CLIENTS);

        setId(id);
        setEmail(email);
        setName(name);
        setRole(role);
        resetChangedOnNotNull();
    }
}
